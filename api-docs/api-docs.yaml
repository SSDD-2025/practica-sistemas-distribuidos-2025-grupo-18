openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    put:
      tags:
      - user-rest-controller
      operationId: replaceUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/reviews/{id}:
    get:
      tags:
      - review-rest-controller
      operationId: getReviewById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
    put:
      tags:
      - review-rest-controller
      operationId: updateReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
    delete:
      tags:
      - review-rest-controller
      operationId: deleteReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/books/{id}:
    get:
      tags:
      - book-rest-controller
      operationId: getBookById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BookDTO"
    put:
      tags:
      - book-rest-controller
      operationId: replaceBook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookSimpleDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BookSimpleDTO"
    delete:
      tags:
      - book-rest-controller
      operationId: deleteBook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/books/{id}/image:
    get:
      tags:
      - book-rest-controller
      operationId: getBookImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
    put:
      tags:
      - book-rest-controller
      operationId: updateBookImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
      - book-rest-controller
      operationId: deleteBookImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/authors/{id}:
    get:
      tags:
      - author-rest-controller
      operationId: getAuthor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthorDTO"
    put:
      tags:
      - author-rest-controller
      operationId: replaceAuthorSimpleDTO
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorSimpleDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthorSimpleDTO"
    delete:
      tags:
      - author-rest-controller
      operationId: deleteAuthor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/users/register:
    post:
      tags:
      - user-rest-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/users/logout:
    post:
      tags:
      - user-rest-controller
      operationId: logOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/login:
    post:
      tags:
      - user-rest-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/reviews:
    post:
      tags:
      - review-rest-controller
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewSimpleDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
  /api/books/:
    get:
      tags:
      - book-rest-controller
      operationId: getBooks
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelBookDTO"
    post:
      tags:
      - book-rest-controller
      operationId: createBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BookDTO"
  /api/authors/:
    get:
      tags:
      - author-rest-controller
      operationId: getAuthors
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModel"
    post:
      tags:
      - author-rest-controller
      operationId: createAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorSimpleDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthorDTO"
  /api/users/search:
    get:
      tags:
      - user-rest-controller
      operationId: searchUsers
      parameters:
      - name: query
        in: query
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelUserDTO"
  /api/users/:
    get:
      tags:
      - user-rest-controller
      operationId: getUsers
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelUserDTO"
  /api/reviews/:
    get:
      tags:
      - review-rest-controller
      operationId: getReviews
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelReviewDTO"
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int64
        bio:
          type: string
        name:
          type: string
        books:
          type: array
          items:
            $ref: "#/components/schemas/Book"
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        image:
          type: string
          format: byte
        imageBase64:
          type: string
        name:
          type: string
        yearPub:
          type: integer
          format: int32
        author:
          $ref: "#/components/schemas/Author"
        description:
          type: string
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/Review"
    BookList:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        user:
          $ref: "#/components/schemas/User"
        books:
          type: array
          items:
            $ref: "#/components/schemas/Book"
    Review:
      type: object
      properties:
        id:
          type: integer
          format: int64
        rate:
          type: integer
          format: int32
        textReview:
          type: string
        book:
          $ref: "#/components/schemas/Book"
        user:
          $ref: "#/components/schemas/User"
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        encodedPassword:
          type: string
        password:
          type: string
        bookLists:
          type: array
          items:
            $ref: "#/components/schemas/BookList"
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/Review"
        roles:
          type: array
          items:
            type: string
    ReviewDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        rate:
          type: integer
          format: int32
        textReview:
          type: string
        bookTitle:
          type: string
        username:
          type: string
    BookSimpleDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    AuthorSimpleDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        bio:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    ReviewSimpleDTO:
      type: object
      properties:
        rate:
          type: integer
          format: int32
        textReview:
          type: string
        bookId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
    BookDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        yearPub:
          type: integer
          format: int32
    AuthorDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        bio:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        roles:
          type: array
          items:
            type: string
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    PagedModelUserDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/UserDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
    PagedModelReviewDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/ReviewDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelBookDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/BookDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModel:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
        page:
          $ref: "#/components/schemas/PageMetadata"
